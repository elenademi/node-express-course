"In this lesson, you created a middleware function called asyncWrapper. Why?"
To avoid redundancy in the code: instead of repeating "try/catch" blocks in several places, asyncWrapper performed
the same function, but in one place. 

const getTask = asyncWrapper(async (req, res, next) => {  
  const { id: taskID } = req.params;  
  const task = await Task.findOne({ _id: taskID });  
  if (!task) {
     return next(createCustomError(`No task with id : ${taskID}`, 404))
   } 
  res.status(200).json({ task });  
});
